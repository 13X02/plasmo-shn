var g=typeof globalThis.process<"u"?globalThis.process.argv:[];var y=()=>typeof globalThis.process<"u"?globalThis.process.env:{};var w=new Set(g),_=e=>w.has(e),W=g.filter(e=>e.startsWith("--")&&e.includes("=")).map(e=>e.split("=")).reduce((e,[t,o])=>(e[t]=o,e),{});var U=_("--dry-run"),m=()=>_("--verbose")||y().VERBOSE==="true",I=m();var f=(e="",...t)=>console.log(e.padEnd(9),"|",...t);var v=(...e)=>console.error("\u{1F534} ERROR".padEnd(9),"|",...e),b=(...e)=>f("\u{1F535} INFO",...e),h=(...e)=>f("\u{1F7E0} WARN",...e),A=0,l=(...e)=>m()&&f(`\u{1F7E1} ${A++}`,...e);var n=__plasmo_runtime_data__;module.bundle.HMR_BUNDLE_ID=n.bundleId;globalThis.process={argv:[],env:{VERBOSE:n.verbose}};var C=module.bundle.Module;function D(e){C.call(this,e),this.hot={data:module.bundle.hotData[e],_acceptCallbacks:[],_disposeCallbacks:[],accept:function(t){this._acceptCallbacks.push(t||function(){})},dispose:function(t){this._disposeCallbacks.push(t)}},module.bundle.hotData[e]=void 0}module.bundle.Module=D;module.bundle.hotData={};var i=globalThis.chrome||globalThis.browser||null;function u(){return!n.host||n.host==="0.0.0.0"?location.protocol.indexOf("http")===0?location.hostname:"localhost":n.host}function p(){return n.port||location.port}var M=`${n.secure?"https":"http"}://${u()}:${p()}/`;async function x(e=1470){for(;;)try{await fetch(M);break}catch{await new Promise(o=>setTimeout(o,e))}}if(i.runtime.getManifest().manifest_version===3){let e=i.runtime.getURL("/__plasmo_hmr_proxy__?url=");globalThis.addEventListener("fetch",function(t){let o=t.request.url;if(o.startsWith(e)){let s=new URL(decodeURIComponent(o.slice(e.length)));s.hostname===n.host&&s.port===`${n.port}`?(s.searchParams.set("t",Date.now().toString()),t.respondWith(fetch(s).then(a=>new Response(a.body,{headers:{"Content-Type":a.headers.get("Content-Type")??"text/javascript"}})))):t.respondWith(new Response("Plasmo HMR",{status:200,statusText:"Testing"}))}})}function R(e,t){let{modules:o}=e;return o?!!o[t]:!1}function S(e=p()){let t=u(),o=n.secure||location.protocol==="https:"&&!/localhost|127.0.0.1|0.0.0.0/.test(t)?"wss":"ws";return i?.runtime?.lastError&&globalThis?.location?.reload?.(),`${o}://${t}:${e}/`}function k(e){typeof e.message=="string"&&v("[plasmo/parcel-runtime]: "+e.message)}function E(e){if(typeof globalThis.WebSocket>"u")return;let t=new WebSocket(S(Number(p())+1));return t.addEventListener("message",async function(o){if(JSON.parse(o.data).type==="build_ready"){await e();return}}),t.addEventListener("error",k),t}function L(e){if(typeof globalThis.WebSocket>"u")return;let t=new WebSocket(S());return t.addEventListener("message",async function(o){let s=JSON.parse(o.data);if(s.type==="update"&&await e(s.assets),s.type==="error")for(let a of s.diagnostics.ansi){let c=a.codeframe||a.stack;h("[plasmo/parcel-runtime]: "+a.message+`
`+c+`

`+a.hints.join(`
`))}}),t.addEventListener("error",k),t.addEventListener("open",()=>{b(`[plasmo/parcel-runtime]: Connected to HMR server for ${n.entryFilePath}`)}),t.addEventListener("close",()=>{h(`[plasmo/parcel-runtime]: Connection to the HMR server is closed for ${n.entryFilePath}`)}),t}var T=module.bundle.parent,r={buildReady:!1,hmrUpdated:!1,csCodeChanged:!1,ports:new Set};function d(e=!1){if(e||r.buildReady&&(r.hmrUpdated||r.csCodeChanged)){l("BGSW Runtime - reloading"),i.runtime.reload();for(let t of r.ports)t.postMessage({__plasmo_cs_reload__:!0})}}if(!T||!T.isParcelRequire){let e=L(async t=>{l("BGSW Runtime - On HMR Update"),r.hmrUpdated||=t.filter(s=>s.envHash===n.envHash).some(s=>R(module.bundle,s.id));let o=t.find(s=>s.type==="json");if(o){let s=new Set(t.map(c=>c.id)),a=Object.values(o.depsByBundle).map(c=>Object.values(c)).flat();r.hmrUpdated||=a.every(c=>s.has(c))}d()});e.addEventListener("open",()=>{let t=setInterval(()=>e.send("ping"),24e3);e.addEventListener("close",()=>clearInterval(t))}),e.addEventListener("close",async()=>{await x(),d(!0)})}E(async()=>{l("BGSW Runtime - On Build Repackaged"),r.buildReady||=!0,d()});i.runtime.onConnect.addListener(function(e){e.name.startsWith("__plasmo_runtime_script_")&&(r.ports.add(e),e.onDisconnect.addListener(()=>{r.ports.delete(e)}),e.onMessage.addListener(function(t){t.__plasmo_cs_changed__&&(l("BGSW Runtime - On CS code changed"),r.csCodeChanged||=!0,d())}))});i.runtime.onMessage.addListener(function(t){return t.__plasmo_full_reload__&&(l("BGSW Runtime - On top-level code changed"),d(!0)),!0});
