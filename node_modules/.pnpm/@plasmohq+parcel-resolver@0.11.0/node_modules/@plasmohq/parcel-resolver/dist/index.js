var G=Object.create;var y=Object.defineProperty;var K=Object.getOwnPropertyDescriptor;var U=Object.getOwnPropertyNames;var H=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var X=(t,e)=>{for(var o in e)y(t,o,{get:e[o],enumerable:!0})},P=(t,e,o,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of U(e))!q.call(t,r)&&r!==o&&y(t,r,{get:()=>e[r],enumerable:!(s=K(e,r))||s.enumerable});return t};var w=(t,e,o)=>(o=t!=null?G(H(t)):{},P(e||!t||!t.__esModule?y(o,"default",{value:t,enumerable:!0}):o,t)),Q=t=>P(y({},"__esModule",{value:!0}),t);var it={};X(it,{default:()=>at});module.exports=Q(it);var z=require("@parcel/plugin");var c=require("path");var b=w(require("fast-glob")),S=require("fs"),M=require("fs-extra"),l=require("path");var m=require("path"),E=t=>t.replaceAll(m.win32.sep,m.posix.sep);var i=[".ts",".tsx",".svelte",".vue",".json"],L=new Set(i),n={got:null,dotPlasmoDirectory:null,polyfillMap:null,aliasMap:null},F=async t=>{if(n.got===null&&(n.got=(await import("got")).default),n.dotPlasmoDirectory||(n.dotPlasmoDirectory=(0,l.resolve)(process.env.PLASMO_PROJECT_DIR,".plasmo")),!n.polyfillMap){let e=(0,l.join)(__dirname,"polyfills"),o=await(0,b.default)("**/*.js",{cwd:e,onlyFiles:!0});n.polyfillMap=new Map(o.map(s=>[E(s.slice(0,-3)),(0,l.join)(e,s)]))}if(!n.aliasMap){let e=await(0,M.readJson)((0,l.resolve)(process.env.PLASMO_PROJECT_DIR,"package.json"));n.aliasMap=new Map(Object.entries(e.alias||{}))}},u=async(t,e=i,o={})=>{let s=e.flatMap(r=>[`${t}${r}`,(0,l.resolve)(t,`index${r}`)]);for(let r of s)try{if((0,S.statSync)(r).isFile())return{filePath:r,...o}}catch{}return null};async function D({specifier:t,dependency:e}){if(t[0]!=="/"||(0,c.isAbsolute)(t))return null;let o=(0,c.resolve)(process.env.PLASMO_PROJECT_DIR,t.slice(1));if((0,c.extname)(o).length>0)return{filePath:o};let r=(0,c.extname)(e.resolveFrom),a=[r,...i.filter(p=>p!==r)];return u(o,a)}var T=require("path");var $=require("fs"),f=require("fs/promises");var v=typeof globalThis.process<"u"?globalThis.process.argv:[];var R=()=>typeof globalThis.process<"u"?globalThis.process.env:{},Y=/\$([\w+]+)/gm,A=(t,e=R(),o=Y)=>t.replace(o,(s,r)=>e[r]||s);var Z=new Set(v),O=t=>Z.has(t),dt=v.filter(t=>t.startsWith("--")&&t.includes("=")).map(t=>t.split("=")).reduce((t,[e,o])=>(t[e]=o,t),{});var Pt=O("--dry-run"),h=()=>O("--verbose")||R().VERBOSE==="true",wt=h();var tt=(t="",...e)=>console.log(t.padEnd(9),"|",...e);var et=0,_=(...t)=>h()&&tt(`\u{1F7E1} ${et++}`,...t);async function ot(t,e){try{return await(0,f.access)(t,e),!0}catch(o){return _(o),!1}}async function k(t){return ot(t,$.constants.R_OK)}async function C({specifier:t}){if(!n.aliasMap.has(t))return null;let e=(0,T.resolve)(n.aliasMap.get(t));return await k(e)?{filePath:e,priority:"sync"}:null}var rt=new Set(["firebase-admin"]);async function I({specifier:t,dependency:e}){try{let o=t.split("/");if(o.length>2||rt.has(o[0]))return{filePath:require.resolve(t,{paths:[e.resolveFrom]})}}catch{}return null}var x=require("path");var st=(t="",e="",o="")=>{if(!t.startsWith(e))return null;let[s,r]=t.split(e);return u((0,x.resolve)(o,r))};async function W({specifier:t}){return st(t,"@plasmo-static-common/",(0,x.resolve)(n.dotPlasmoDirectory,"static","common"))}async function j({specifier:t}){return n.polyfillMap.has(t)?{filePath:n.polyfillMap.get(t),priority:"sync"}:null}var d=require("@parcel/hash"),N=require("path");var nt=async(t,e)=>t.origin==="https://www.googletagmanager.com"?e.replace(/http:/g,"chrome-extension:"):e;async function J({specifier:t,dependency:e,options:o}){if(!t.startsWith("https://")||!i.some(a=>e.sourcePath.endsWith(a)))return null;let s=new URL(A(t)),r=s.searchParams.get("plasmo-ext")||"js";try{let a=await n.got(s.toString()).text(),p=await nt(s,a),B=(0,N.resolve)(o.projectRoot,`${(0,d.hashString)(t)}-${(0,d.hashString)(p)}.${r}`);return{code:p,priority:"lazy",filePath:B}}catch(a){return{diagnostics:[{message:`Cannot download the resource from ${t}`,hints:[a.message]}]}}}var g=require("path");async function V({specifier:t,dependency:e}){if(t[0]!=="~")return null;let o=(0,g.resolve)(process.env.PLASMO_SRC_DIR,t.slice(1)),s=(0,g.extname)(o);if(s.length>0&&L.has(s))return{filePath:o};let r=(0,g.extname)(e.resolveFrom),a=[r,...i.filter(p=>p!==r)];return u(o,a)}var at=new z.Resolver({async resolve(t){return await F(t),await C(t)||await W(t)||await j(t)||await J(t)||await V(t)||await D(t)||await I(t)||null}});0&&(module.exports={});
